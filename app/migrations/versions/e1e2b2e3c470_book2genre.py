"""book2genre

Revision ID: e1e2b2e3c470
Revises: 
Create Date: 2023-06-25 22:49:08.879292

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e1e2b2e3c470'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.drop_constraint('book_ibfk_1', type_='foreignkey')
        batch_op.drop_constraint('book_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('book_ibfk_3', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_book_genre_id_genre'), 'genre', ['genre_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_book_cover_id_cover'), 'cover', ['cover_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_book_author_id_authors'), 'authors', ['author_id'], ['id'])

    with op.batch_alter_table('cover', schema=None) as batch_op:
        batch_op.alter_column('mime_type',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('md5_hash',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('genre', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='id',
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=45),
               comment=None,
               existing_comment='название жанра',
               existing_nullable=False)
        batch_op.drop_index('name')
        batch_op.create_unique_constraint(batch_op.f('uq_genre_name'), ['name'])

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('text',
               existing_type=mysql.TEXT(),
               nullable=True)
        batch_op.alter_column('given_rating',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('book_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('reviews_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_reviews_book_id_book'), 'book', ['book_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('login',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=120),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('middle_name',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.create_unique_constraint(batch_op.f('uq_users_login'), ['login'])
        batch_op.create_foreign_key(batch_op.f('fk_users_role_id_roles'), 'roles', ['role_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_users_role_id_roles'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('uq_users_login'), type_='unique')
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('middle_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=256),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('login',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_reviews_book_id_book'), type_='foreignkey')
        batch_op.create_foreign_key('reviews_ibfk_1', 'book', ['book_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('book_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('given_rating',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('text',
               existing_type=mysql.TEXT(),
               nullable=False)

    with op.batch_alter_table('genre', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_genre_name'), type_='unique')
        batch_op.create_index('name', ['name'], unique=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=45),
               comment='название жанра',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='id',
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('cover', schema=None) as batch_op:
        batch_op.alter_column('md5_hash',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('mime_type',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)

    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_book_author_id_authors'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_book_cover_id_cover'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_book_genre_id_genre'), type_='foreignkey')
        batch_op.create_foreign_key('book_ibfk_3', 'cover', ['cover_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('book_ibfk_2', 'genre', ['genre_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key('book_ibfk_1', 'authors', ['author_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###
